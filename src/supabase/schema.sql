create table public.report (
  id bigint generated by default as identity not null,
  "Problem_Category" text null,
  "Reporter_Type" text null,
  "Location" text null,
  "class_No" bigint null,
  "Impact_Scope" text null,
  "Occurrence_Pattern" text null,
  images text null,
  priority_level integer null default 1,
  priority_text text null default 'Medium'::text,
  description jsonb null,
  resolved boolean null default false,
  resolved_at timestamp with time zone null,
  reporter_id uuid null,
  constraint report_pkey primary key (id),
  constraint fk_reporter foreign key (reporter_id) references auth.users(id)
) TABLESPACE pg_default;

create index IF not exists idx_report_priority on public.report using btree (priority_level desc) TABLESPACE pg_default;
create index IF not exists idx_report_reporter on public.report using btree (reporter_id) TABLESPACE pg_default;

-- Community Messages Table
create table public.community_messages (
  id bigint generated by default as identity not null,
  sender_id uuid not null,
  sender_name text not null,
  sender_role text not null,
  content text not null,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  college_id text not null,
  constraint community_messages_pkey primary key (id),
  constraint fk_sender foreign key (sender_id) references auth.users(id)
) TABLESPACE pg_default;

create index IF not exists idx_community_messages_created_at on public.community_messages using btree (created_at desc) TABLESPACE pg_default;
create index IF not exists idx_community_messages_sender on public.community_messages using btree (sender_id) TABLESPACE pg_default; 